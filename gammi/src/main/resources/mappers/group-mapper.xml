<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="groupMapper">

	<resultMap type="GammiGroup" id="resultList">
		<id property="group_no" column="group_no" />
		<result property="group_owner" column="group_owner" />
		<result property="group_name" column="group_name" />
		<result property="group_date" column="group_date" />
		<result property="group_info" column="group_info" />
		<result property="group_img" column="group_img" />
		<result property="group_ok" column="group_ok" />
		<result property="total_mem" column="total_mem" />
	</resultMap>
	
	<resultMap type="GroupMember" id="GMList">
		<id property="join_no" column="join_no" />
		<result property="group_no" column="group_no" />
		<result property="m_id" column="m_id" />
		<result property="member_grade" column="member_grade" />
		<result property="member_grade_date" column="member_grade_date" />
	</resultMap>
	
	
	<!-- 전체 목록 조회 -->
	<!-- 
	<select id = "selectAllList" parameterType="Paging" resultMap="resultList">
	select *
	from (select rownum rnum, group_no, GROUP_OWNER, GROUP_NAME,GROUP_DATE, GROUP_INFO, GROUP_IMG, GROUP_OK, "total_mem"
	from (select a.group_no, a.GROUP_OWNER, a.GROUP_NAME, a.GROUP_DATE, a.GROUP_INFO, a.GROUP_IMG, a.GROUP_OK,count(a.group_no) as "total_mem"
	from gammigroup a
	join groupmember b on a.group_no = b.group_no
	<if test="m_id != null">
		where b.member_grade in(1,3,4)
	</if>
	group by a.group_no,a.GROUP_OWNER, a.GROUP_NAME, a.GROUP_DATE, a.GROUP_INFO, a.GROUP_IMG, a.GROUP_OK
	order by a.group_date desc))
	<![CDATA[
	where rnum >= #{startRow} and rnum <= #{endRow}
	]]>
	</select>
	 -->
	<select id = "selectAllList" parameterType="Paging" resultMap="resultList">
	select *
	from (select rownum rnum, group_no, GROUP_OWNER, GROUP_NAME,GROUP_DATE, GROUP_INFO, GROUP_IMG, GROUP_OK, "total_mem"
	from (select a.group_no, a.GROUP_OWNER, a.GROUP_NAME, a.GROUP_DATE, a.GROUP_INFO, a.GROUP_IMG, a.GROUP_OK,b."total_mem"
	from gammigroup a
	join ( select group_no, count(*) as "total_mem"
	from groupmember
	where member_grade in (3,4)
 	<if test="m_id != null">
		  and group_no in (select group_no from groupmember where m_id= #{m_id})
	</if>
 	group by group_no ) b on a.group_no = b.group_no
	order by a.group_date desc))
	<![CDATA[
	where rnum >= #{startRow} and rnum <= #{endRow}
	]]>
	</select>
	
	
	<!-- 전체 그룹 갯수 조회 -->
	<select id="selectListCount" resultType="_int">
	select count(*) from gammigroup
	</select>
	<select id ="selectSearchTListCount" resultType="_int" parameterType="string">
	select count(*) from GAMMIGROUP
	where group_name like '%' || #{ keyword } || '%'
	</select>
	<select id="selectSearchOListCount" resultType="_int" parameterType="string">
	select count(*) from GAMMIGROUP
	where group_owner like '%' || #{ keyword } || '%'
	</select>
	<select id="selectJoinListCount" resultType="_int" parameterType="string">
	select count(*) from groupmember
	where m_id = #{m_id}
	</select>
	
	<select id="selectSearchTitle" resultType="GammiGroup" parameterType="SearchPaging">
	<![CDATA[
	select *
	from (select rownum rnum, group_no, GROUP_OWNER, GROUP_NAME,GROUP_DATE, GROUP_INFO, GROUP_IMG, GROUP_OK, "total_mem"
	from (select a.group_no, a.GROUP_OWNER, a.GROUP_NAME, a.GROUP_DATE, a.GROUP_INFO, a.GROUP_IMG, a.GROUP_OK,count(a.group_no) as "total_mem"
	from gammigroup a
	join groupmember b on a.group_no = b.group_no
	group by a.group_no,a.GROUP_OWNER, a.GROUP_NAME, a.GROUP_DATE, a.GROUP_INFO, a.GROUP_IMG, a.GROUP_OK
	order by a.group_date))
			where rnum >= #{startRow} and rnum <= #{endRow} and group_name like '%' || #{keyword} || '%'
		]]>
	</select>
	
	<select id="selectSearchOwner" resultType="GammiGroup" parameterType="SearchPaging">
	<![CDATA[
	select *
	from (select rownum rnum, group_no, GROUP_OWNER, GROUP_NAME,GROUP_DATE, GROUP_INFO, GROUP_IMG, GROUP_OK, "total_mem"
	from (select a.group_no, a.GROUP_OWNER, a.GROUP_NAME, a.GROUP_DATE, a.GROUP_INFO, a.GROUP_IMG, a.GROUP_OK,count(a.group_no) as "total_mem"
	from gammigroup a
	join groupmember b on a.group_no = b.group_no
	group by a.group_no,a.GROUP_OWNER, a.GROUP_NAME, a.GROUP_DATE, a.GROUP_INFO, a.GROUP_IMG, a.GROUP_OK
	order by a.group_date))
			where rnum >= #{startRow} and rnum <= #{endRow} and group_owner like '%' || #{keyword} || '%'
		]]>
	</select>
	
	<!-- 그룹 한개 조회(입장용) -->
	<select id = "selectOneGroup" resultType="GammiGroup" parameterType="_int">
	select *
	from GAMMIGROUP
	where group_no=#{ group_no }
	</select>
	
	<!-- 가입되어있는지 확인  -->
	<select id="getGroupMember" resultType="GroupMember" parameterType="GroupMember">
	select *
	from groupmember
	where group_no=#{ group_no } and m_id=#{ m_id }
	</select>
	
	<!-- 그룹에 가입자 수 확인 -->
	<select id = "getmemberCount" resultType="_int" parameterType="_int">
	select count(*)
	from groupmember
	where group_no=#{group_no}
	</select>
	<!-- 신규 그룹 추가 -->
	<insert id="insertGroup" parameterType="GammiGroup">
		insert into gammigroup
		values ( default, #{group_owner}, #{group_name}, default, #{ group_info }, #{group_img}, default)
	</insert>
	<!-- 그룹 추가에 따라오는 멤버 추가(그룹장) -->
	<insert id="insertGoupMember" parameterType="GammiGroup">
		insert into groupmember
		values(default, (select max(group_no) from gammigroup where group_owner=#{group_owner}) , #{group_owner}, 4, default)
	</insert>
	<!-- 그룹 추가에 따라오는 공지사항 생성 -->
	<insert id = "insertGroupNotice" parameterType="GammiGroup">
	insert into groupnotice
	values(default, (select max(group_no) from gammigroup where group_owner=#{group_owner}), #{group_owner}, '신규공지사항',  sysdate)
	</insert>
	<!-- 가입신청 -->
	<insert id="createApplication" parameterType="GroupMember">
		insert into groupmember
		values(default, #{group_no}, #{m_id}, #{member_grade}, default)
	</insert>
	
	<!-- 모임 가입된 유저 목록 전체조회(가입유저, 신청자, 거절된 목록까지 전체 조회) -->
	<select id = "getAllGM" parameterType="_int" resultType="GroupMember">
		select *
		from groupmember
		where group_no =#{gno}
		order by member_grade_date, member_grade
	</select>
	<!-- 그룹 제거 -->
	<delete id="deleteGroup" parameterType ="GammiGroup">
	delete from gammigroup
	where group_no=#{group_no}
	</delete>
	<!-- 모임 탈퇴/추방처리 -->
	<delete id="deleteGroupMember" parameterType="GroupMember">
	delete from groupmember
	where group_no=#{group_no} and m_id = #{m_id}
	</delete>
	
	<!-- 모임 가입 승인 -->
	<update id="acceptGroupMember" parameterType="GroupMember">
	update groupmember
	set member_grade = 3, member_grade_date = default
	where group_no=#{group_no} and m_id = #{m_id}
	</update>
	
	<!-- 모임 가입 거절 -->
	<update id="refuseGroupMember" parameterType="GroupMember">
	update groupmember
	set member_grade = 2, member_grade_date = default
	where group_no=#{group_no} and m_id = #{m_id}
	</update>
</mapper>







